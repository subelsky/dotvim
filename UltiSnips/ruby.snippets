snippet bef "before..end"
before(${1::each}) do
	${2}
end
endsnippet

snippet con "context..end"
context "${1}" do
	${2:pending}
end
endsnippet

snippet des "describe..end"
describe "${1:subject}" do
	${2}
end
endsnippet

snippet def "def..end" !
def ${1}
	${2}
end
endsnippet

snippet it "it..end"
it "${1}" do
	${2:pending}
end
endsnippet

snippet pen "pending..end"
pending "${1}" do
	${2}
end
endsnippet

snippet rsh "start a spec file"
require "spec_helper"

describe ${1:subject} do
	${2}
end
endsnippet

snippet sop "save and open page"
save_and_open_page
endsnippet

snippet be "be_an_instance_of"
be_an_instance_of(${1})
endsnippet

snippet bp "binding.pry"
binding.pry
endsnippet
